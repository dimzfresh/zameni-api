version: '3.8'
services:
  zookeeper-prod:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper-prod
    container_name: zookeeper-prod
    ports:
      - "2183:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_MAX_CLIENT_CNXNS: 60
    volumes:
      - zookeeper-prod-data:/var/lib/zookeeper/data
      - zookeeper-prod-logs:/var/lib/zookeeper/log
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  kafka-prod:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka-prod
    container_name: kafka-prod
    depends_on:
      - zookeeper-prod
    ports:
      - "9094:9092"
      - "9103:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-prod:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-prod:29092,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPIC_ENABLE: 'false'
      # Настройки для production
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 10000
      KAFKA_REPLICA_SOCKET_TIMEOUT_MS: 30000
      KAFKA_REPLICA_SOCKET_RECEIVE_BUFFER_BYTES: 65536
      KAFKA_REPLICA_FETCH_MIN_BYTES: 1
      KAFKA_REPLICA_FETCH_WAIT_MAX_MS: 500
      KAFKA_NUM_REPLICA_FETCHERS: 1
      KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 10000
      KAFKA_LOG_FLUSH_INTERVAL_MS: 1000
    volumes:
      - kafka-prod-data:/var/lib/kafka/data
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  kafka-ui-prod:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-prod
    depends_on:
      - kafka-prod
    ports:
      - "8083:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: production
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-prod:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-prod:2181
      KAFKA_CLUSTERS_0_READONLY: true

  schema-registry-prod:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry-prod
    container_name: schema-registry-prod
    depends_on:
      - kafka-prod
    ports:
      - "8084:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-prod
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-prod:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  kafka-connect-prod:
    image: confluentinc/cp-kafka-connect:7.4.0
    hostname: kafka-connect-prod
    container_name: kafka-connect-prod
    depends_on:
      - kafka-prod
      - schema-registry-prod
    ports:
      - "8085:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka-prod:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect-prod
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry-prod:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

volumes:
  zookeeper-prod-data:
  zookeeper-prod-logs:
  kafka-prod-data:
