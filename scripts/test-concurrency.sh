#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏ API
# –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é

BASE_URL="http://localhost:3000"
CONCURRENT_REQUESTS=100
TIMEOUT=30

echo "üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏ API"
echo "=================================="
echo "URL: $BASE_URL"
echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: $CONCURRENT_REQUESTS"
echo "–¢–∞–π–º–∞—É—Ç: ${TIMEOUT}—Å"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
if ! curl -s "$BASE_URL" > /dev/null; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ $BASE_URL"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run start:dev"
    exit 1
fi

echo "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
echo ""

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
RESULTS_FILE="/tmp/concurrency_test_$(date +%s).json"

echo "üìä –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
make_request() {
    local id=$1
    local email="test${id}@example.com"
    local name="Test User ${id}"
    local password="password123"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π email
    local timestamp=$(date +%s%N)
    local unique_email="test${id}_${timestamp}@example.com"
    
    local start_time=$(date +%s%N)
    
    response=$(curl -s -w "\n%{http_code}\n%{time_total}\n" \
        -X POST "$BASE_URL/auth/register" \
        -H "Content-Type: application/json" \
        -d "{
            \"email\": \"$unique_email\",
            \"name\": \"$name\",
            \"password\": \"$password\"
        }" \
        --max-time $TIMEOUT)
    
    local end_time=$(date +%s%N)
    local duration=$(( (end_time - start_time) / 1000000 )) # –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    
    # –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç
    local http_code=$(echo "$response" | tail -n 2 | head -n 1)
    local response_time=$(echo "$response" | tail -n 1)
    local response_body=$(echo "$response" | head -n -2)
    
    echo "{\"id\":$id,\"email\":\"$unique_email\",\"http_code\":$http_code,\"duration_ms\":$duration,\"response_time\":$response_time}" >> "$RESULTS_FILE"
    
    if [ "$http_code" = "201" ]; then
        echo "‚úÖ –ó–∞–ø—Ä–æ—Å $id: –£–°–ü–ï–• (${duration}ms)"
    else
        echo "‚ùå –ó–∞–ø—Ä–æ—Å $id: –û–®–ò–ë–ö–ê $http_code (${duration}ms)"
    fi
}

# –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
> "$RESULTS_FILE"

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º $CONCURRENT_REQUESTS –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤..."
for i in $(seq 1 $CONCURRENT_REQUESTS); do
    make_request $i &
done

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
wait

echo ""
echo "üìà –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
if [ -f "$RESULTS_FILE" ]; then
    total_requests=$(wc -l < "$RESULTS_FILE")
    successful_requests=$(grep -c '"http_code":201' "$RESULTS_FILE")
    failed_requests=$((total_requests - successful_requests))
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
    avg_duration=$(awk -F'"' '/duration_ms/ {sum+=$4; count++} END {if(count>0) printf "%.2f", sum/count}' "$RESULTS_FILE")
    
    # –ù–∞—Ö–æ–¥–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
    min_duration=$(awk -F'"' '/duration_ms/ {if(min=="") min=$4; if($4<min) min=$4} END {print min}' "$RESULTS_FILE")
    max_duration=$(awk -F'"' '/duration_ms/ {if($4>max) max=$4} END {print max}' "$RESULTS_FILE")
    
    echo ""
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "=========================="
    echo "–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: $total_requests"
    echo "–£—Å–ø–µ—à–Ω—ã—Ö: $successful_requests"
    echo "–ù–µ—É–¥–∞—á–Ω—ã—Ö: $failed_requests"
    echo "–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: $(( (successful_requests * 100) / total_requests ))%"
    echo ""
    echo "‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:"
    echo "  –°—Ä–µ–¥–Ω–µ–µ: ${avg_duration}ms"
    echo "  –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ: ${min_duration}ms"
    echo "  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ: ${max_duration}ms"
    
    if [ $successful_requests -eq $total_requests ]; then
        echo ""
        echo "üéâ –í–°–ï –ó–ê–ü–†–û–°–´ –£–°–ü–ï–®–ù–´! API –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å—é"
    elif [ $successful_requests -gt $((total_requests * 80 / 100)) ]; then
        echo ""
        echo "‚úÖ –•–æ—Ä–æ—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —É—Å–ø–µ—à–Ω—ã"
    else
        echo ""
        echo "‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å—é. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"
    fi
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm "$RESULTS_FILE"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
fi

echo ""
echo "üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
